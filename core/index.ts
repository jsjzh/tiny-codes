// import twoSum from '@/twoSum';
// import reverse from '@/reverse';
// import isPalindrome from '@/isPalindrome';
// // TODO // import romanToInt from '@/romanToInt';
// import longestCommonPrefix from '@/longestCommonPrefix';
// import isValid from '@/isValid';
// import mergeTwoLists from '@/mergeTwoLists';
// import removeDuplicates from '@/removeDuplicates';
// import removeElement from '@/removeElement';
// import strStr from '@/strStr';
// import searchInsert from '@/searchInsert';
// import maxSubArray from '@/maxSubArray';
// import lengthOfLastWord from '@/lengthOfLastWord';
// import plusOne from '@/plusOne';
// // TODO // import addBinary from '@/addBinary';
// // TODO // import mySqrt from '@/mySqrt';
// import climbStairs from '@/climbStairs';
// import deleteDuplicates from '@/deleteDuplicates';
// import merge from '@/merge';
// // no best
// import inorderTraversal from '@/inorderTraversal';
// import isSameTree from '@/isSameTree';
// import isSymmetric from '@/isSymmetric';
// import maxDepth from '@/maxDepth';
// import sortedArrayToBST from '@/sortedArrayToBST';
// import isBalanced from '@/isBalanced';
// import minDepth from '@/minDepth';
// import hasPathSum from '@/hasPathSum';
// import generate from '@/generate';
// import getRow from '@/getRow';
// import maxProfit from '@/maxProfit';
// import maxProfit2 from '@/maxProfit2';
// import isPalindrome2 from '@/isPalindrome2';
// import singleNumber from '@/singleNumber';
// import hasCycle from '@/hasCycle';
// import preorderTraversal from '@/preorderTraversal';
// import postorderTraversal from '@/postorderTraversal';
// import minStack from '@/minStack';
// import getIntersectionNode from '@/getIntersectionNode';
// import twoSum2 from '@/twoSum2';
// import convertToTitle from '@/convertToTitle';
// import majorityElement from '@/majorityElement';
// import titleToNumber from '@/titleToNumber';
// import trailingZeroes from '@/trailingZeroes';
// import isHappy from '@/isHappy';
// import removeElements from '@/removeElements';
// // TODO // import countPrimes from '@/countPrimes';
// import isIsomorphic from '@/isIsomorphic';
// import reverseList from '@/reverseList';
// import containsDuplicate from '@/containsDuplicate';
// import containsNearbyDuplicate from '@/containsNearbyDuplicate';
// import myStack from '@/myStack';
// import invertTree from '@/invertTree';
// import summaryRanges from '@/summaryRanges';
// import isPowerOfTwo from '@/isPowerOfTwo';
import myQueue from '@/myQueue';

console.log();

// twoSum();
// reverse();
// isPalindrome();
// // romanToInt();
// longestCommonPrefix();
// isValid();
// mergeTwoLists();
// removeDuplicates();
// removeElement();
// strStr();
// searchInsert();
// maxSubArray();
// lengthOfLastWord();
// plusOne();
// // addBinary();
// // mySqrt();
// climbStairs();
// deleteDuplicates();
// merge();
// inorderTraversal();
// isSameTree();
// isSymmetric();
// maxDepth();
// sortedArrayToBST();
// isBalanced();
// minDepth();
// generate();
// getRow();
// maxProfit();
// maxProfit2();
// isPalindrome2();
// singleNumber();
// hasCycle();
// preorderTraversal();
// postorderTraversal();
// minStack();
// getIntersectionNode();
// twoSum2();
// convertToTitle();
// majorityElement();
// titleToNumber();
// trailingZeroes();
// isHappy();
// removeElements();
// // countPrimes();
// isIsomorphic();
// reverseList();
// containsDuplicate();
// containsNearbyDuplicate();
// myStack();
// invertTree();
// summaryRanges();
// isPowerOfTwo();
myQueue();

console.log();
